{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { ButtonOne } from \"../components/ButtonOne\";\nimport { FormInput } from \"../components/FormInput\";\nimport { Styles } from \"../components/Styles\";\nimport { TypeText } from \"../components/TypeText\";\nimport { db } from \"../util/Firebase\";\nimport { Clientes } from \"../objeto/Clientes\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function EditarCliente(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      cliente = _useState2[0],\n      setCliente = _useState2[1];\n\n  var _useContext = useContext(AuthContext),\n      user = _useContext.user;\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      Nome = _useState4[0],\n      setNome = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      Bairro = _useState6[0],\n      setBairro = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      Rua = _useState8[0],\n      setRua = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      Telefone = _useState10[0],\n      setTelefone = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      N = _useState12[0],\n      setN = _useState12[1];\n\n  function editaCliente() {\n    db.collection(\"Usuários\").doc(user.uid).collection(\"Clientes\").doc(route.params.Id).update({\n      Nome: Nome,\n      Bairro: Bairro,\n      Rua: Rua,\n      Telefone: Telefone,\n      Numero: N\n    });\n    navigation.navigate('ClienteData', {\n      Nome: Nome\n    });\n  }\n\n  useEffect(function () {\n    var nomes = [];\n\n    function loadProds() {\n      return _regeneratorRuntime.async(function loadProds$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(db.collection('Usuários').doc(user.uid).collection('Clientes').get().then(function (querySnapshot) {\n                querySnapshot.docs.forEach(function (doc) {\n                  nomes.push(new Clientes(doc.data()));\n                });\n                var dados = nomes.filter(function (nome) {\n                  return nome.Nome === route.params.Nome;\n                });\n                dados.forEach(function (cliente) {\n                  setCliente(cliente);\n                  setBairro(cliente.Bairro);\n                  setN(cliente.Numero);\n                  setNome(cliente.Nome);\n                  setRua(cliente.Rua);\n                  setTelefone(cliente.Telefone);\n                });\n              }));\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    loadProds();\n  }, []);\n  return _jsx(View, {\n    style: {\n      flex: 1\n    },\n    children: _jsx(SafeAreaView, {\n      style: {\n        flex: 1,\n        marginHorizontal: 25,\n        marginVertical: 50\n      },\n      children: cliente != null ? _jsxs(View, {\n        style: {\n          flex: 1,\n          justifyContent: 'space-between'\n        },\n        children: [_jsx(TypeText, {\n          textTitle: \"Editar Cliente\"\n        }), _jsxs(View, {\n          children: [_jsx(View, {\n            style: {\n              marginTop: 20\n            },\n            children: _jsx(FormInput, {\n              holder: 'Nome',\n              image: false,\n              value: Nome,\n              onChangeText: function onChangeText(text) {\n                return setNome(text);\n              }\n            })\n          }), _jsx(View, {\n            style: {\n              marginTop: 20\n            },\n            children: _jsx(FormInput, {\n              holder: 'Bairro',\n              image: false,\n              value: Bairro,\n              onChangeText: function onChangeText(text) {\n                return setBairro(text);\n              }\n            })\n          }), _jsx(View, {\n            style: {\n              marginTop: 20\n            },\n            children: _jsx(FormInput, {\n              holder: 'Rua',\n              image: false,\n              value: Rua,\n              onChangeText: function onChangeText(text) {\n                return setRua(text);\n              }\n            })\n          }), _jsx(View, {\n            style: {\n              marginTop: 20\n            },\n            children: _jsx(FormInput, {\n              holder: 'Telefone',\n              image: false,\n              value: Telefone,\n              onChangeText: function onChangeText(text) {\n                return setTelefone(text);\n              }\n            })\n          }), _jsx(View, {\n            style: {\n              marginTop: 20\n            },\n            children: _jsx(FormInput, {\n              holder: 'Numero',\n              image: false,\n              value: N,\n              onChangeText: function onChangeText(text) {\n                return setN(text);\n              }\n            })\n          })]\n        }), _jsx(View, {\n          style: {\n            marginTop: 37,\n            alignItems: 'center'\n          },\n          children: _jsx(ButtonOne, {\n            title: \"Salvar\",\n            onPress: editaCliente\n          })\n        })]\n      }) : _jsx(Text, {\n        style: Styles.textSocial,\n        children: \"CARREGANDO....\"\n      })\n    })\n  });\n}","map":{"version":3,"sources":["/home/yuri/Programação/React/sales-manager/src/screens/EditarCliente.js"],"names":["React","useState","useContext","useEffect","ButtonOne","FormInput","Styles","TypeText","db","Clientes","AuthContext","EditarCliente","navigation","route","cliente","setCliente","user","Nome","setNome","Bairro","setBairro","Rua","setRua","Telefone","setTelefone","N","setN","editaCliente","collection","doc","uid","params","Id","update","Numero","navigate","nomes","loadProds","get","then","querySnapshot","docs","forEach","push","data","dados","filter","nome","flex","marginHorizontal","marginVertical","justifyContent","marginTop","text","alignItems","textSocial"],"mappings":"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","sourcesContent":["import React ,{ useState, useContext, useEffect } from \"react\";\nimport { View, SafeAreaView, TouchableOpacity, Text } from 'react-native';\nimport { KeyboardAvoidingView } from \"react-native\";\nimport { ButtonOne } from \"../components/ButtonOne\";\nimport { FormInput } from \"../components/FormInput\";\nimport { Styles } from \"../components/Styles\";\nimport { TypeText } from \"../components/TypeText\";\nimport { db } from \"../util/Firebase\";\nimport { Clientes } from \"../objeto/Clientes\";\nimport { AuthContext } from \"../context/AuthContext\";\n\nexport function EditarCliente({navigation, route}){\n\n    const [cliente, setCliente] = useState(null);\n    const { user } = useContext(AuthContext);\n    const [Nome, setNome] = useState('');\n    const [Bairro, setBairro] = useState('');\n    const [Rua, setRua] = useState('');\n    const [Telefone, setTelefone] = useState('');\n    const [N, setN] = useState('');\n    \n    function editaCliente(){\n        db.collection(\"Usuários\").doc(user.uid).collection(\"Clientes\").doc(route.params.Id).update({\n            Nome: Nome,\n            Bairro: Bairro,\n            Rua: Rua,\n            Telefone: Telefone,\n            Numero: N, \n        });\n\n        navigation.navigate('ClienteData', {Nome: Nome});\n    }\n\n    useEffect(() => {\n        let nomes = [];        \n        \n        async function loadProds() {\n            await db.collection('Usuários').doc(user.uid).collection('Clientes').get().then(querySnapshot => {\n                querySnapshot.docs.forEach(doc => {\n                    nomes.push(new Clientes (doc.data()));\n                });\n\n                var dados = nomes.filter(nome => (nome.Nome) === route.params.Nome);\n                \n            \n                dados.forEach(cliente => { \n                    setCliente(cliente)\n\n                    setBairro(cliente.Bairro);\n                    setN(cliente.Numero);\n                    setNome(cliente.Nome);\n                    setRua(cliente.Rua);\n                    setTelefone(cliente.Telefone);\n                })\n\n            });\n           \n        }\n        loadProds();\n    }, [])\n    \n\n    return(\n        <View style = {{flex: 1}}>\n            <SafeAreaView style = {{flex:1, marginHorizontal: 25, marginVertical: 50}}>\n                \n                {(cliente != null)?\n                    <View style = {{flex:1, justifyContent:'space-between'}}>\n\n                        <TypeText textTitle = 'Editar Cliente'/>\n\n                        <View>\n\n                            <View style = {{marginTop: 20}}>\n                                <FormInput holder = {'Nome'} image = {false} value = {Nome} onChangeText = {text => setNome(text)} />\n                            </View>\n\n                            <View style = {{marginTop: 20}}>\n                                <FormInput holder = {'Bairro'} image = {false} value = {Bairro} onChangeText = {text => setBairro(text)} />\n                            </View>\n\n                            <View style = {{marginTop: 20}}>\n                                <FormInput holder = {'Rua'} image = {false} value = {Rua} onChangeText = {text => setRua(text)} />\n                            </View>\n\n                            <View style = {{marginTop: 20}}>\n                                <FormInput holder = {'Telefone'} image = {false} value = {Telefone} onChangeText = {text => setTelefone(text)} />\n                            </View>\n\n                            <View style = {{marginTop: 20}}>\n                                <FormInput holder = {'Numero'} image = {false} value = {N} onChangeText = {text => setN(text)} />\n                            </View>           \n\n                        </View>\n\n                        <View style = {{marginTop: 37, alignItems:'center'}}>\n                                <ButtonOne title = 'Salvar' onPress = {editaCliente}/>\n                        </View>\n                        \n                    </View>\n\n                    : <Text style = {Styles.textSocial}>CARREGANDO....</Text>\n                }\n                \n            </SafeAreaView>\n        </View>\n    );\n}"]},"metadata":{},"sourceType":"module"}