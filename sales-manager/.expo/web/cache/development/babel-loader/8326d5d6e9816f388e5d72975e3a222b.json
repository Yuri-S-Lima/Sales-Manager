{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { ButtonOne } from \"../components/ButtonOne\";\nimport { FormInput } from \"../components/FormInput\";\nimport { TypeText } from \"../components/TypeText\";\nimport { db } from \"../util/Firebase\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function AddProduto(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useContext = useContext(AuthContext),\n      user = _useContext.user;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      Nome = _useState2[0],\n      setNome = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      Preco = _useState4[0],\n      setPreco = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      Data = _useState6[0],\n      setData = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      Quantidade = _useState8[0],\n      setQtd = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      docName = _useState10[0],\n      setDocName = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      Divida = _useState12[0],\n      setDivida = _useState12[1];\n\n  var _useState13 = useState(null),\n      _useState14 = _slicedToArray(_useState13, 2),\n      Lucro = _useState14[0],\n      setLucro = _useState14[1];\n\n  {\n    route.params.verifica ? useEffect(function () {\n      var nomes = [];\n      var ids = [];\n\n      function loadProds() {\n        var pos, i, id;\n        return _regeneratorRuntime.async(function loadProds$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _regeneratorRuntime.awrap(db.collection('Usuários').doc(user.uid).collection('Clientes').get().then(function (querySnapshot) {\n                  querySnapshot.docs.forEach(function (doc) {\n                    nomes.push(doc.data().Nome);\n                    ids.push(doc.id);\n                  }, db.doc('Usuários/' + user.uid).get().then(function (doc) {\n                    if (doc.exists) {\n                      setLucro(doc.data().Lucro);\n                    }\n                  }));\n                }));\n\n              case 2:\n                pos = nomes.indexOf(route.params.buscado);\n\n                for (i = 0; i < ids.length; i++) {\n                  if (i === pos) {\n                    id = ids[i];\n                    setDocName(id);\n                  }\n                }\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      }\n\n      loadProds();\n    }, []) : useEffect(function () {\n      console.log('aqui estou false');\n      setDocName(route.params.buscado);\n      setDivida(route.params.div);\n      setLucro(route.params.lucro);\n    }, []);\n  }\n\n  function addProduto() {\n    console.log(\"final\", docName);\n\n    if (route.params.verifica) {\n      var QuantidadeF = parseInt(Quantidade);\n      var PrecoF = parseFloat(Preco) * QuantidadeF;\n      db.collection(\"Usuários\").doc(user.uid).collection(\"Clientes\").doc(docName).collection(\"Produtos\").add({\n        Nome: Nome,\n        Preco: PrecoF,\n        Data: Data,\n        Quantidade: QuantidadeF\n      }, db.collection(\"Usuários\").doc(user.uid).collection(\"Clientes\").doc(docName).update({\n        Divida: PrecoF\n      }, db.collection(\"Usuários\").doc(user.uid).update({\n        Lucro: Lucro + PrecoF\n      })));\n      navigation.navigate('Home');\n    } else {\n      var _QuantidadeF = parseInt(Quantidade);\n\n      var _PrecoF = parseFloat(Preco) * _QuantidadeF;\n\n      db.collection(\"Usuários\").doc(user.uid).collection(\"Clientes\").doc(docName).collection(\"Produtos\").add({\n        Nome: Nome,\n        Preco: _PrecoF,\n        Data: Data,\n        Quantidade: _QuantidadeF\n      }, db.collection(\"Usuários\").doc(user.uid).collection(\"Clientes\").doc(docName).update({\n        Divida: Divida + _PrecoF\n      }, db.collection(\"Usuários\").doc(user.uid).update({\n        Lucro: Lucro + _PrecoF\n      })));\n      navigation.navigate('Home');\n    }\n  }\n\n  return _jsx(View, {\n    style: {\n      flex: 1\n    },\n    children: _jsx(SafeAreaView, {\n      style: {\n        flex: 1,\n        marginHorizontal: 25,\n        marginVertical: 50\n      },\n      children: _jsxs(View, {\n        style: {\n          flex: 1,\n          justifyContent: 'space-between'\n        },\n        children: [_jsx(TypeText, {\n          textTitle: \"Adicionar Venda\"\n        }), _jsxs(View, {\n          children: [_jsx(View, {\n            style: {\n              marginTop: 20\n            },\n            children: _jsx(FormInput, {\n              holder: \"Produto\",\n              image: false,\n              onChangeText: function onChangeText(text) {\n                return setNome(text);\n              }\n            })\n          }), _jsx(View, {\n            style: {\n              marginTop: 20\n            },\n            children: _jsx(FormInput, {\n              holder: \"Pre\\xE7o\",\n              image: false,\n              onChangeText: function onChangeText(text) {\n                return setPreco(text);\n              }\n            })\n          }), _jsx(View, {\n            style: {\n              marginTop: 20\n            },\n            children: _jsx(FormInput, {\n              holder: \"Data\",\n              image: false,\n              onChangeText: function onChangeText(text) {\n                return setData(text);\n              }\n            })\n          }), _jsx(View, {\n            style: {\n              marginTop: 20\n            },\n            children: _jsx(FormInput, {\n              holder: \"Quantidade\",\n              image: false,\n              onChangeText: function onChangeText(text) {\n                return setQtd(text);\n              }\n            })\n          })]\n        }), _jsx(View, {\n          style: {\n            marginTop: 40,\n            alignItems: 'center'\n          },\n          children: _jsx(ButtonOne, {\n            title: \"Salvar\",\n            onPress: addProduto\n          })\n        })]\n      })\n    })\n  });\n}","map":{"version":3,"sources":["/home/yuri/Programação/React/sales-manager/src/screens/AddProduto.js"],"names":["React","useState","useContext","useEffect","ButtonOne","FormInput","TypeText","db","AuthContext","AddProduto","navigation","route","user","Nome","setNome","Preco","setPreco","Data","setData","Quantidade","setQtd","docName","setDocName","Divida","setDivida","Lucro","setLucro","params","verifica","nomes","ids","loadProds","collection","doc","uid","get","then","querySnapshot","docs","forEach","push","data","id","exists","pos","indexOf","buscado","i","length","console","log","div","lucro","addProduto","QuantidadeF","parseInt","PrecoF","parseFloat","add","update","navigate","flex","marginHorizontal","marginVertical","justifyContent","marginTop","text","alignItems"],"mappings":"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","sourcesContent":["import React ,{ useState, useContext , useEffect} from \"react\";\nimport { View, SafeAreaView} from 'react-native';\nimport { ButtonOne } from \"../components/ButtonOne\";\nimport { FormInput } from \"../components/FormInput\";\nimport { TypeText } from \"../components/TypeText\";\nimport { db } from \"../util/Firebase\";\nimport { AuthContext } from \"../context/AuthContext\";\n\nexport function AddProduto({navigation, route}){\n\n    const { user } = useContext(AuthContext);\n\n    const [Nome, setNome] = useState('');\n    const [Preco, setPreco] = useState('');\n    const [Data, setData] = useState('');\n    const [Quantidade, setQtd] = useState('');\n    const [docName, setDocName] = useState(null);\n    const [Divida, setDivida] = useState(null);\n    const [Lucro, setLucro] = useState(null);\n\n    { (route.params.verifica)?\n       ( useEffect(() => {\n            let nomes = [];\n            let ids = []\n            \n            async function loadProds() {\n                await db.collection('Usuários').doc(user.uid).collection('Clientes').get().then(querySnapshot => {\n                    querySnapshot.docs.forEach(doc => {\n                        nomes.push(doc.data().Nome);\n                        ids.push(doc.id);\n                    },\n                        db.doc('Usuários/' + user.uid).get().then( // percorre o bd\n                            doc=>{\n                                if(doc.exists){ \n                                    setLucro(doc.data().Lucro);\n                                }\n                            }\n                        )       \n                    );\n                });\n\n                let pos = nomes.indexOf(route.params.buscado);\n\n                for(var i = 0; i < ids.length; i++){\n                    if(i === pos){\n                        let id = ids[i];\n                        setDocName(id);\n                    }\n                }\n            }\n            loadProds();\n        }, [])\n\n       ):(\n            useEffect(() => {\n                console.log('aqui estou false');\n            \n                setDocName(route.params.buscado);\n                setDivida(route.params.div);\n                setLucro(route.params.lucro);\n            }, []))\n            \n    }\n\n    function addProduto(){\n        console.log(\"final\", docName);\n\n        if(route.params.verifica){\n            let QuantidadeF = parseInt(Quantidade);\n            let PrecoF = parseFloat(Preco) * QuantidadeF;\n\n            db.collection(\"Usuários\").doc(user.uid).collection(\"Clientes\").doc(docName).collection(\"Produtos\").add({\n                Nome: Nome,\n                Preco: PrecoF,\n                Data: Data,\n                Quantidade: QuantidadeF,\n            },\n                db.collection(\"Usuários\").doc(user.uid).collection(\"Clientes\").doc(docName).update({\n                    Divida: PrecoF,\n                },\n                    db.collection(\"Usuários\").doc(user.uid).update({\n                        Lucro: Lucro + PrecoF,\n                    })\n                )\n            );\n\n            navigation.navigate('Home');\n        }\n        else{\n\n            let QuantidadeF = parseInt(Quantidade);\n            let PrecoF = parseFloat(Preco) * QuantidadeF;\n\n            db.collection(\"Usuários\").doc(user.uid).collection(\"Clientes\").doc(docName).collection(\"Produtos\").add({\n                Nome: Nome,\n                Preco: PrecoF,\n                Data: Data,\n                Quantidade: QuantidadeF,\n            },\n                db.collection(\"Usuários\").doc(user.uid).collection(\"Clientes\").doc(docName).update({\n                    Divida: Divida + PrecoF,\n                },\n                    db.collection(\"Usuários\").doc(user.uid).update({\n                        Lucro: Lucro + PrecoF,\n                    })\n                )\n            );\n\n            navigation.navigate('Home');\n        }\n    }\n\n    return(\n        <View style = {{flex: 1}}>\n            <SafeAreaView style = {{flex:1, marginHorizontal: 25, marginVertical: 50}}>\n                \n                <View style = {{flex: 1, justifyContent:'space-between'}}>\n\n                    <TypeText textTitle = 'Adicionar Venda'/>\n\n                    <View >\n                        <View style = {{marginTop: 20}}>\n                            <FormInput holder = 'Produto' image = {false} onChangeText = {text => setNome(text)}/>\n                        </View>\n\n                        <View style = {{marginTop: 20}}>\n                            <FormInput holder = 'Preço' image = {false} onChangeText = {text => setPreco(text)}/>\n                        </View>\n\n                        <View style = {{marginTop: 20}}>\n                            <FormInput holder = 'Data' image = {false} onChangeText = {text => setData(text)}/>\n                        </View>\n\n                        <View style = {{marginTop: 20}}>\n                            <FormInput holder = 'Quantidade' image = {false} onChangeText = {text => setQtd(text)}/>\n                        </View>         \n\n                    </View>\n\n                    <View style = {{marginTop: 40, alignItems:'center'}}>\n                        <ButtonOne title = 'Salvar' onPress = {addProduto}/>\n                    </View>\n                    \n                </View>\n            </SafeAreaView>\n        </View>\n    );\n}"]},"metadata":{},"sourceType":"module"}