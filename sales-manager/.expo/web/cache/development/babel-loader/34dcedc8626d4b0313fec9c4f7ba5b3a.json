{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Styles } from \"./Styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport function FormInput(props) {\n  var _useState = useState(props.password),\n      _useState2 = _slicedToArray(_useState, 2),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  return _jsx(View, {\n    children: props.password ? _jsxs(View, {\n      style: [Styles.input],\n      children: [_jsx(Image, {\n        source: require(\"../../assets/icons/login.png\")\n      }), _jsx(TextInput, {\n        style: Styles.textInput,\n        onChangeText: props.onChangeText,\n        value: props.value,\n        autoCapitalize: \"none\",\n        placeholder: props.holder,\n        secureTextEntry: password\n      }), _jsx(TouchableOpacity, {\n        style: {\n          marginLeft: 'auto'\n        },\n        onPressIn: function onPressIn() {\n          return setPassword(false);\n        },\n        onPressOut: function onPressOut() {\n          return setPassword(true);\n        },\n        children: _jsx(Image, {\n          source: require(\"../../assets/icons/visibilidadeOn.png\")\n        })\n      })]\n    }) : _jsxs(View, {\n      style: [Styles.input],\n      children: [props.image ? props.email ? _jsx(Image, {\n        source: require(\"../../assets/icons/email.png\")\n      }) : _jsx(Image, {\n        source: require(\"../../assets/icons/usu\\xE1rio.png\")\n      }) : _jsx(_Fragment, {}), _jsx(TextInput, {\n        style: Styles.textInput,\n        onChangeText: props.onChangeText,\n        value: props.value,\n        autoCapitalize: \"none\",\n        placeholder: props.holder\n      })]\n    })\n  });\n}","map":{"version":3,"sources":["/home/yuri/Programação/React/sales-manager/src/components/FormInput.js"],"names":["React","useState","Styles","FormInput","props","password","setPassword","input","require","textInput","onChangeText","value","holder","marginLeft","image","email"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;;AAEA,SAASC,MAAT;;;;AAEA,OAAO,SAASC,SAAT,CAAmBC,KAAnB,EAAyB;AAC5B,kBAAgCH,QAAQ,CAACG,KAAK,CAACC,QAAP,CAAxC;AAAA;AAAA,MAAOA,QAAP;AAAA,MAAiBC,WAAjB;;AAEA,SACI,KAAC,IAAD;AAAA,cACOF,KAAK,CAACC,QAAP,GAEE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAI,CAACH,MAAM,CAACK,KAAR,CAAf;AAAA,iBACI,KAAC,KAAD;AAAO,QAAA,MAAM,EAAEC,OAAO;AAAtB,QADJ,EAGI,KAAC,SAAD;AAAW,QAAA,KAAK,EAAIN,MAAM,CAACO,SAA3B;AAAsC,QAAA,YAAY,EAAEL,KAAK,CAACM,YAA1D;AAAwE,QAAA,KAAK,EAAGN,KAAK,CAACO,KAAtF;AAA6F,QAAA,cAAc,EAAC,MAA5G;AAAmH,QAAA,WAAW,EAAIP,KAAK,CAACQ,MAAxI;AAAgJ,QAAA,eAAe,EAAEP;AAAjK,QAHJ,EAKI,KAAC,gBAAD;AAAmB,QAAA,KAAK,EAAI;AAACQ,UAAAA,UAAU,EAAC;AAAZ,SAA5B;AAAiD,QAAA,SAAS,EAAE;AAAA,iBAAMP,WAAW,CAAC,KAAD,CAAjB;AAAA,SAA5D;AAAsF,QAAA,UAAU,EAAE;AAAA,iBAAMA,WAAW,CAAC,IAAD,CAAjB;AAAA,SAAlG;AAAA,kBACI,KAAC,KAAD;AAAO,UAAA,MAAM,EAAEE,OAAO;AAAtB;AADJ,QALJ;AAAA,MAFF,GAYE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAI,CAACN,MAAM,CAACK,KAAR,CAAf;AAAA,iBACMH,KAAK,CAACU,KAAP,GACIV,KAAK,CAACW,KAAP,GACI,KAAC,KAAD;AAAO,QAAA,MAAM,EAAEP,OAAO;AAAtB,QADJ,GAEI,KAAC,KAAD;AAAO,QAAA,MAAM,EAAEA,OAAO;AAAtB,QAHP,GAII,mBALT,EAQI,KAAC,SAAD;AAAW,QAAA,KAAK,EAAIN,MAAM,CAACO,SAA3B;AAAsC,QAAA,YAAY,EAAEL,KAAK,CAACM,YAA1D;AAAyE,QAAA,KAAK,EAAGN,KAAK,CAACO,KAAvF;AAA8F,QAAA,cAAc,EAAC,MAA7G;AAAoH,QAAA,WAAW,EAAIP,KAAK,CAACQ;AAAzI,QARJ;AAAA;AAbR,IADJ;AA4BH","sourcesContent":["import React, {useState} from \"react\";\nimport { View, TextInput, TouchableOpacity, Image } from 'react-native';\nimport { Styles } from \"./Styles\";\n\nexport function FormInput(props){\n    const [password, setPassword] = useState(props.password);\n\n    return (\n        <View>\n            { (props.password)? \n                \n                <View style = {[Styles.input]}>\n                    <Image source={require('../../assets/icons/login.png')}/>\n                    \n                    <TextInput style = {Styles.textInput} onChangeText={props.onChangeText} value ={props.value} autoCapitalize='none' placeholder = {props.holder} secureTextEntry={password}  />\n\n                    <TouchableOpacity  style = {{marginLeft:'auto'}} onPressIn={() => setPassword(false)} onPressOut={() => setPassword(true)} > \n                        <Image source={require('../../assets/icons/visibilidadeOn.png')}/>\n                    </TouchableOpacity>\n                </View>\n                :        \n                <View style = {[Styles.input]}>\n                    {(props.image)?\n                        (props.email)?\n                            <Image source={require('../../assets/icons/email.png')}/>:\n                            <Image source={require('../../assets/icons/usuário.png')}/>\n                        :<></>\n                    }\n\n                    <TextInput style = {Styles.textInput} onChangeText={props.onChangeText}  value ={props.value} autoCapitalize='none' placeholder = {props.holder}/>\n                </View>                    \n        \n            }\n        </View>\n    );\n}"]},"metadata":{},"sourceType":"module"}