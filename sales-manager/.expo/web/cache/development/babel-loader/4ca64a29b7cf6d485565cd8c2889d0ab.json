{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { ButtonOne } from \"../components/ButtonOne\";\nimport { FormInput } from \"../components/FormInput\";\nimport { Styles } from \"../components/Styles\";\nimport { TypeText } from \"../components/TypeText\";\nimport { db } from \"../util/Firebase\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function EditarProduto(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useContext = useContext(AuthContext),\n      user = _useContext.user;\n\n  var listaProdutos = route.params.produtos;\n  var produtoBuscado = route.params.Nome;\n  var id = route.params.Id;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      Nome = _useState2[0],\n      setNome = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      Preco = _useState4[0],\n      setPreco = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      Data = _useState6[0],\n      setData = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      Quantidade = _useState8[0],\n      setQ = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      Produtos = _useState10[0],\n      setP = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      PrecoSemAlteracao = _useState12[0],\n      setPSA = _useState12[1];\n\n  var _useState13 = useState(null),\n      _useState14 = _slicedToArray(_useState13, 2),\n      Lucro = _useState14[0],\n      setLucro = _useState14[1];\n\n  useEffect(function () {\n    var lista = listaProdutos.filter(function (nome) {\n      return nome.Nome === produtoBuscado;\n    });\n    lista.forEach(function (produtos) {\n      setP(produtos);\n      setData(produtos.Data);\n      setPreco(produtos.Preco.toString());\n      setPSA(produtos.Preco);\n      setNome(produtos.Nome);\n      setQ(produtos.Quantidade);\n    }, db.doc('Usuários/' + user.uid).get().then(function (doc) {\n      if (doc.exists) {\n        setLucro(doc.data().Lucro);\n      }\n    }));\n  }, []);\n\n  function editarProduto() {\n    var ids = [];\n    var produtosNome = [];\n    var idFinal;\n    db.collection(\"Usuários\").doc(user.uid).collection(\"Clientes\").doc(id).collection(\"Produtos\").onSnapshot(function (querySnapshot) {\n      querySnapshot.forEach(function (doc) {\n        ids.push(doc.id);\n        produtosNome.push(doc.data().Nome);\n      });\n      var pos = produtosNome.indexOf(produtoBuscado);\n\n      for (var i = 0; i < ids.length; i++) {\n        if (i === pos) {\n          idFinal = ids[i];\n          console.log(idFinal);\n        }\n      }\n\n      var QuantidadeF = parseInt(Quantidade);\n      var PrecoF = parseFloat(Preco) * QuantidadeF;\n      db.collection(\"Usuários\").doc(user.uid).collection(\"Clientes\").doc(id).collection(\"Produtos\").doc(idFinal).update({\n        Nome: Nome,\n        Preco: PrecoF,\n        Data: Data,\n        Quantidade: QuantidadeF\n      });\n      db.collection(\"Usuários\").doc(user.uid).collection(\"Clientes\").doc(id).update({\n        Divida: route.params.Divida - PrecoSemAlteracao + PrecoF\n      });\n      db.collection(\"Usuários\").doc(user.uid).update({\n        Lucro: Lucro - PrecoSemAlteracao + PrecoF\n      });\n      navigation.navigate('ClienteData', {\n        Nome: produtoBuscado\n      });\n    });\n  }\n\n  return _jsx(View, {\n    style: {\n      flex: 1\n    },\n    children: _jsx(SafeAreaView, {\n      style: {\n        flex: 1,\n        marginHorizontal: 25,\n        marginVertical: 50\n      },\n      children: Produtos != null ? _jsxs(View, {\n        style: {\n          flex: 1,\n          justifyContent: 'space-between'\n        },\n        children: [_jsx(TypeText, {\n          textTitle: \"Editar Venda\"\n        }), _jsxs(View, {\n          children: [_jsx(View, {\n            style: {\n              marginTop: 20\n            },\n            children: _jsx(FormInput, {\n              holder: \"Produto\",\n              image: false,\n              value: Nome,\n              onChangeText: function onChangeText(text) {\n                return setNome(text);\n              }\n            })\n          }), _jsx(View, {\n            style: {\n              marginTop: 20\n            },\n            children: _jsx(FormInput, {\n              holder: \"Pre\\xE7o\",\n              image: false,\n              value: Preco,\n              onChangeText: function onChangeText(text) {\n                return setPreco(text);\n              }\n            })\n          }), _jsx(View, {\n            style: {\n              marginTop: 20\n            },\n            children: _jsx(FormInput, {\n              holder: \"Data\",\n              image: false,\n              value: Data,\n              onChangeText: function onChangeText(text) {\n                return setData(text);\n              }\n            })\n          }), _jsx(View, {\n            style: {\n              marginTop: 20\n            },\n            children: _jsx(FormInput, {\n              holder: \"Quantidade\",\n              image: false,\n              value: Quantidade.toString(),\n              onChangeText: function onChangeText(text) {\n                return setQ(text);\n              }\n            })\n          })]\n        }), _jsx(View, {\n          style: {\n            marginTop: 40,\n            alignItems: 'center'\n          },\n          children: _jsx(ButtonOne, {\n            title: \"Salvar\",\n            onPress: editarProduto\n          })\n        })]\n      }) : _jsx(Text, {\n        style: Styles.textSocial,\n        children: \"CARREGANDO....\"\n      })\n    })\n  });\n}","map":{"version":3,"sources":["/home/yuri/Programação/React/sales-manager/src/screens/EditarProduto.js"],"names":["React","useState","useEffect","useContext","ButtonOne","FormInput","Styles","TypeText","db","AuthContext","EditarProduto","navigation","route","user","listaProdutos","params","produtos","produtoBuscado","Nome","id","Id","setNome","Preco","setPreco","Data","setData","Quantidade","setQ","Produtos","setP","PrecoSemAlteracao","setPSA","Lucro","setLucro","lista","filter","nome","forEach","toString","doc","uid","get","then","exists","data","editarProduto","ids","produtosNome","idFinal","collection","onSnapshot","querySnapshot","push","pos","indexOf","i","length","console","log","QuantidadeF","parseInt","PrecoF","parseFloat","update","Divida","navigate","flex","marginHorizontal","marginVertical","justifyContent","marginTop","text","alignItems","textSocial"],"mappings":"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","sourcesContent":["import React ,{ useState, useEffect, useContext } from \"react\";\nimport { View, SafeAreaView, TouchableOpacity, Text } from 'react-native';\nimport { ButtonOne } from \"../components/ButtonOne\";\nimport { FormInput } from \"../components/FormInput\";\nimport { Styles } from \"../components/Styles\";\nimport { TypeText } from \"../components/TypeText\";\nimport { db } from \"../util/Firebase\";\nimport { AuthContext } from \"../context/AuthContext\";\n\nexport function EditarProduto({navigation, route}){\n    \n    const { user } = useContext(AuthContext);\n    let listaProdutos = route.params.produtos;\n    let produtoBuscado = route.params.Nome;\n    let id = route.params.Id;\n\n    const [Nome, setNome] = useState('');\n    const [Preco, setPreco] = useState('');\n    const [Data, setData] = useState('');\n    const [Quantidade, setQ] = useState('');\n    const [Produtos, setP] = useState(null);\n    const [PrecoSemAlteracao, setPSA] = useState('');\n    const [Lucro, setLucro] = useState(null);\n\n    useEffect(() => {\n     \n        var lista = listaProdutos.filter(nome => (nome.Nome) === produtoBuscado);\n        \n    \n        lista.forEach(produtos => { \n            setP(produtos);\n\n            setData(produtos.Data);\n            setPreco(produtos.Preco.toString());\n            setPSA(produtos.Preco);\n            setNome(produtos.Nome);\n            setQ(produtos.Quantidade);\n        },\n            db.doc('Usuários/' + user.uid).get().then( // percorre o bd\n                doc=>{\n                    if(doc.exists){ \n                        setLucro(doc.data().Lucro);\n                    }\n                }\n            )\n        )\n\n    \n    }, [])\n\n    function editarProduto(){\n\n        let ids = []\n        let produtosNome = []\n        let idFinal;\n\n        db.collection(\"Usuários\").doc(user.uid).collection(\"Clientes\").doc(id).collection(\"Produtos\").onSnapshot(querySnapshot => {\n            querySnapshot.forEach(doc => {     \n                ids.push(doc.id);\n                produtosNome.push(doc.data().Nome);\n            });\n\n            let pos = produtosNome.indexOf(produtoBuscado);\n           \n \n            for(var i = 0; i < ids.length; i++){\n                if(i === pos){\n                    idFinal = ids[i];\n                    console.log(idFinal)\n                }\n            }\n\n            let QuantidadeF = parseInt(Quantidade);\n            let PrecoF = parseFloat(Preco) * QuantidadeF;\n\n            db.collection(\"Usuários\").doc(user.uid).collection(\"Clientes\").doc(id).collection(\"Produtos\").doc(idFinal).update({\n                Nome: Nome,\n                Preco: PrecoF,\n                Data: Data,\n                Quantidade: QuantidadeF,\n            });\n\n            db.collection(\"Usuários\").doc(user.uid).collection(\"Clientes\").doc(id).update({\n                Divida: (route.params.Divida - PrecoSemAlteracao) + PrecoF,\n            })\n\n            db.collection(\"Usuários\").doc(user.uid).update({\n                Lucro: (Lucro - PrecoSemAlteracao) + PrecoF,\n            })\n\n            navigation.navigate('ClienteData',{Nome: produtoBuscado});\n        })\n     \n        \n    }\n    \n\n    return(\n        <View style = {{flex: 1}}>\n            <SafeAreaView style = {{flex:1, marginHorizontal: 25, marginVertical: 50}}>\n                \n                {(Produtos != null) ?\n                    <View style = {{flex:1, justifyContent:'space-between'}}>\n\n                        <TypeText textTitle = 'Editar Venda'/>\n\n                        <View>\n                            <View style = {{marginTop: 20}}>\n                                <FormInput holder = 'Produto' image = {false} value = {Nome} onChangeText = {text => setNome(text)}/>\n                            </View>\n\n                            <View style = {{marginTop: 20}}>\n                                <FormInput holder = 'Preço' image = {false} value = {Preco} onChangeText = {text => setPreco(text)}/>\n                            </View>\n\n                            <View style = {{marginTop: 20}}>\n                                <FormInput holder = 'Data' image = {false} value = {Data} onChangeText = {text => setData(text)}/>\n                            </View>\n\n                            <View style = {{marginTop: 20}}>\n                                <FormInput holder = 'Quantidade' image = {false} value = {Quantidade.toString()} onChangeText = {text => setQ(text)}/>\n                            </View>         \n\n                        </View>\n\n                        <View style = {{marginTop: 40, alignItems:'center'}}>\n                            <ButtonOne title = 'Salvar'  onPress = {editarProduto}/>\n                        </View>\n                    </View>\n\n                    : <Text style = {Styles.textSocial}>CARREGANDO....</Text>\n                }\n            </SafeAreaView>\n        </View>\n    );\n}"]},"metadata":{},"sourceType":"module"}